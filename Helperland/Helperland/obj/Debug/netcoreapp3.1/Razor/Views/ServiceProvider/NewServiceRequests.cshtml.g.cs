#pragma checksum "F:\Helperland\Helperland\Views\ServiceProvider\NewServiceRequests.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "19cb522f9ab05155ba8f99aa68d8b69a920c1f35"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ServiceProvider_NewServiceRequests), @"mvc.1.0.view", @"/Views/ServiceProvider/NewServiceRequests.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "F:\Helperland\Helperland\Views\_ViewImports.cshtml"
using Helperland.ViewModels;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"19cb522f9ab05155ba8f99aa68d8b69a920c1f35", @"/Views/ServiceProvider/NewServiceRequests.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"795b70a04da20bf42f4a934e3cf3714a4f4e6a79", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_ServiceProvider_NewServiceRequests : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "F:\Helperland\Helperland\Views\ServiceProvider\NewServiceRequests.cshtml"
  
    ViewData["Title"] = "New Service Requests";
    Layout = "~/Views/Shared/_UserLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!-- New Service Requests List -->\r\n<div class=\"form-check mb-3\">\r\n    <input class=\"form-check-input\" type=\"checkbox\"");
            BeginWriteAttribute("value", " value=\"", 227, "\"", 235, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""chkWorkingWithPet"" checked>
    <label class=""form-check-label"" for=""chkWorkingWithPet"">
        Include Pet at Home
    </label>
</div>
<div class=""div-table"">
    <table class=""table card-view-small-screen"" id=""tblNewServiceRequests"">
        <thead>
            <tr>
                <td>Service Id <img class=""sort-img""");
            BeginWriteAttribute("alt", " alt=\"", 572, "\"", 578, 0);
            EndWriteAttribute();
            WriteLiteral("> </td>\r\n                <td>Service Date <img class=\"sort-img\"");
            BeginWriteAttribute("alt", " alt=\"", 642, "\"", 648, 0);
            EndWriteAttribute();
            WriteLiteral("> </td>\r\n                <td>Customer details <img class=\"sort-img\"");
            BeginWriteAttribute("alt", " alt=\"", 716, "\"", 722, 0);
            EndWriteAttribute();
            WriteLiteral("> </td>\r\n                <td>Payment <img class=\"sort-img\"");
            BeginWriteAttribute("alt", " alt=\"", 781, "\"", 787, 0);
            EndWriteAttribute();
            WriteLiteral("></td>\r\n                <td>Time conflict</td>\r\n                <td>Action</td>\r\n            </tr>\r\n        </thead>\r\n    </table>\r\n</div>\r\n\r\n");
            DefineSection("UserLayoutScripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">
        var table;

        $(document).ready(function () {

            table = $('#tblNewServiceRequests').DataTable({
                paging: true,
                pagingType: ""full_numbers"",
                processing: true,
                serverSide: true,
                filter: true,
                ordering: true,
                searching: false,
                info: true,
                ajax: {
                    url: ""/ServiceProvider/GetNewServiceRequestsList"",
                    type: ""POST"",
                    datatype: ""json"",
                    dataSrc: 'data',
                    ""data"": function (d) {
                        d.includePetatHome = $(""#chkWorkingWithPet"").is(':checked');
                    }
                },
                oLanguage: {
                    sInfo: ""Total Records: _TOTAL_"",
                    sProcessing: ""<div id='preloader'><div id='loader'></div></div>""
                },
             ");
                WriteLiteral(@"   columnDefs: [
                    { ""orderable"": false, ""targets"": 4 },
                    { ""orderable"": false, ""targets"": 5 }
                ],
                columns: [
                    {
                        data: 'serviceRequestId',
                        name: 'ServiceRequestId',
                    },
                    {
                        name: 'ServiceDateTime',
                        render: function (data, type, row) {
                            return ""<img src='../images/calendar2.png' class='me-1' alt='calenderIcon'><span> "" +
                                ServiceStartDate(row.serviceStartDate) + ""</span ><br> "" +
                                ""<img src='../images/layer-14.png' class='me-1' alt='clockIcon'>"" +
                                ServiceTime(row.serviceStartDate, 0) + "" - "" +
                                ServiceTime(row.serviceStartDate, row.serviceHours);
                        }
                    },
                    {
         ");
                WriteLiteral(@"               name: 'CustomerName',
                        render: function (data, type, row) {
                            return ""<div class='align-items-center d-flex'><img src='../images/layer-15.png' class='me-2' /><div>"" +
                                row.user.firstName + "" "" + row.user.lastName + ""<br>"" +
                                row.serviceRequestAddress[0].addressLine1 + "" "" + row.serviceRequestAddress[0].addressLine2 + ""<br>"" +
                                row.serviceRequestAddress[0].postalCode + "" "" + row.serviceRequestAddress[0].city + ""</div></div>"";
                        }
                    },
                    {
                        name: 'TotalCost',
                        render: function (data, type, row) {
                            return row.totalCost + ""$"";
                        }
                    },
                    {
                        name: 'TimeConflict',
                        render: function (data, type, row) {
            ");
                WriteLiteral(@"                return """";
                        }
                    },
                    {
                        render: function (data, type, row) {
                            return ""<button class='btn rounded-pill button-primary btn-general p-1 fs-14 pe-2 ps-2' onclick='AcceptServiceRequest("" + row.serviceRequestId + "", \"""" + row.recordVersion + ""\"")' >Accept</button>"";
                        }
                    }
                ],
                dom: '<""top"">rt<""bottom""lip><""clear"">',
                responsive: true,
                order: [[0, ""desc""]]
            });

            //click on row column
            $('#tblNewServiceRequests tbody').on('click', 'td', function () {

                if ($(this).index() == 4 || $(this).index() == 5) { // prevent click on 4th column
                    return;
                }
                
                var rowData = table.row(this).data();

                $('#preloader').removeClass(""d-none"");

                ");
                WriteLiteral(@"$.ajax({
                    url: '/ServiceProvider/GetServiceRequestWithCustomerDetails',
                    type: 'post',
                    dataType: 'json',
                    data: { ""serviceRequestId"": rowData.serviceRequestId },
                    success: function (resp) {

                        $('#preloader').addClass(""d-none"");
                        
                        $(""#lblSpServiceRequestDateTime"").html(""<b>"" + ServiceStartDate(resp.data.serviceStartDate) + ""</b> "" +
                            ""<b>"" + ServiceTime(resp.data.serviceStartDate, 0) + ""-"" +
                            ServiceTime(resp.data.serviceStartDate, resp.data.serviceHours) + ""</b>"");
                        $(""#lblSpDuration"").text(resp.data.serviceHours);
                        $(""#lblSpServiceRequestId"").text(resp.data.serviceRequestId);


                        $(""#lblSpExtraServices"").text(resp.extraServiceRequest);
                        $(""#lblSpTotalAmount"").html(""<b>"" + resp.data.tota");
                WriteLiteral(@"lCost + "" $</b>"");

                        $(""#lblSpCustomerName"").text(resp.data.user.firstName + "" "" + resp.data.user.lastName);

                        var serviceAddress = resp.data.serviceRequestAddress[0];

                        $(""#lblSpServiceAddress"").text(serviceAddress.addressLine1 + "" "" + serviceAddress.addressLine2 + "", "" + serviceAddress.postalCode + "" "" + serviceAddress.city)
                        $(""#lblSpPhone"").text(serviceAddress.mobile);   // User Or ServiceAddress
                        $(""#lblSpEmail"").text(resp.data.user.email);

                        $(""#lblSpComments"").text(resp.data.comments);

                        if (resp.data.hasPets == false) {
                            $(""#lblSpHasPet"").html(""<img src='../images/not-included.png'/> I don't have pets at home"");
                        }
                        else {
                            $(""#lblSpHasPet "").html(""<img src='../images/included.png'/> I have pets at home"");
                      ");
                WriteLiteral(@"  }

                        var divBottomBtnHtmlContent = ""<hr>"";

                        divBottomBtnHtmlContent = divBottomBtnHtmlContent + ""<button class='btn rounded-pill btn-general pe-3 ps-3 p-2 fs-14 pe-2 ps-2'"" +
                            "" onclick='AcceptServiceRequest("" + resp.data.serviceRequestId + "", \"""" + rowData.recordVersion + ""\"")' > <img src='../images/tick.png' class='me-1' /> Accept</button>"";

                        $(""#divBottomBtn"").html(divBottomBtnHtmlContent);

                        $('#SpPanelServiceDetailModel').modal({
                            backdrop: 'static',
                            keyboard: false
                        });
                        $('#SpPanelServiceDetailModel').modal('show');
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            });

        });

        $('#chkWorkingWithPet').change(function () {

            ");
                WriteLiteral(@"$('#tblNewServiceRequests').DataTable().ajax.reload();

        });

        function AcceptServiceRequest(serviceRequestId, recordVersion) {

            var serviceRequest = {};

            serviceRequest.serviceRequestId = serviceRequestId;
            serviceRequest.recordVersion = recordVersion;

            $('#preloader').removeClass(""d-none"");

            $.ajax({
                url: '/ServiceProvider/AcceptServiceRequest',
                type: 'post',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(serviceRequest),
                success: function (resp) {

                    $('#preloader').addClass(""d-none"");

                    if (resp.status == ""ok"") {
                        Swal.fire({
                            icon: 'success',
                            title: 'Service Request Accepeted',
                            text: 'You have successfully accept Service Request : ' + serviceReque");
                WriteLiteral(@"stId,
                            allowOutsideClick: false,
                            allowEscapeKey: false
                        })
                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Service Request Error',
                            text: resp.errorMessage,
                            allowOutsideClick: false,
                            allowEscapeKey: false
                        })
                    }

                    $('#tblNewServiceRequests').DataTable().ajax.reload();
                },
                error: function (err) {
                    console.log(err);
                }
            });

        }
    </script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
